package generator

// controllerTemplate is the template for generating controller files
const controllerTemplate = `// Code generated by controller generator. DO NOT EDIT.

package controllers

import (
	"github.com/gin-gonic/gin"
	"github.com/ArcherChu123/plugin-daemon/internal/service"
	"github.com/ArcherChu123/plugin-daemon/internal/types/app"
	"github.com/ArcherChu123/plugin-daemon/pkg/entities/plugin_entities"
	"github.com/ArcherChu123/plugin-daemon/pkg/entities/requests"
)

{{range .Dispatchers}}
func {{.Name}}(config *app.Config) gin.HandlerFunc {
	type request = plugin_entities.InvokePluginRequest[{{.RequestTypeString}}]

	return func(c *gin.Context) {
		BindPluginDispatchRequest(
			c,
			func(itr request) {
				service.{{.Name}}(&itr, c, config.PluginMaxExecutionTimeout)
			},
		)
	}
}
{{end}}
`

// serviceTemplate is the template for generating service files
const serviceTemplate = `// Code generated by controller generator. DO NOT EDIT.

package service

import (
	"github.com/gin-gonic/gin"
	"github.com/ArcherChu123/plugin-daemon/internal/core/plugin_daemon"
	"github.com/ArcherChu123/plugin-daemon/internal/core/plugin_daemon/access_types"
	"github.com/ArcherChu123/plugin-daemon/internal/core/session_manager"
	"github.com/ArcherChu123/plugin-daemon/internal/utils/stream"
	"github.com/ArcherChu123/plugin-daemon/pkg/entities/plugin_entities"
	"github.com/ArcherChu123/plugin-daemon/pkg/entities/requests"
)

{{range .Dispatchers}}
func {{.Name}}(
	r *plugin_entities.InvokePluginRequest[{{.RequestTypeString}}],
	ctx *gin.Context,
	max_timeout_seconds int,
) {
	baseSSEWithSession(
		func(session *session_manager.Session) (*stream.Stream[{{.ResponseTypeString}}], error) {
			return plugin_daemon.{{.Name}}(session, &r.Data)
		},
		{{.AccessTypeString}},
		{{.AccessActionString}},
		r,
		ctx,
		max_timeout_seconds,
	)
}
{{end}}
`

// pluginDaemonTemplate is the template for generating plugin daemon files
const pluginDaemonTemplate = `// Code generated by controller generator. DO NOT EDIT.

package plugin_daemon

import (
	"github.com/ArcherChu123/plugin-daemon/internal/core/session_manager"
	"github.com/ArcherChu123/plugin-daemon/internal/utils/stream"
	"github.com/ArcherChu123/plugin-daemon/pkg/entities/requests"
)

{{range .Dispatchers}}
func {{.Name}}(
	session *session_manager.Session,
	request *{{.RequestTypeString}},
) (
	*stream.Stream[{{.ResponseTypeString}}], error,
) {
	return GenericInvokePlugin[{{.RequestTypeString}}, {{.ResponseTypeString}}](
		session,
		request,
		{{.BufferSize}},
	)
}
{{end}}
`

const httpServerTemplate = `// Code generated by controller generator. DO NOT EDIT.
package server

import (
	"github.com/gin-gonic/gin"
	"github.com/ArcherChu123/plugin-daemon/internal/server/controllers"
	"github.com/ArcherChu123/plugin-daemon/internal/types/app"
)

func (app *App) setupGeneratedRoutes(group *gin.RouterGroup, config *app.Config) {
	{{- range .Dispatchers}}
	group.POST("{{.Path}}", controllers.{{.Name}}(config))
	{{- end}}
}
`
